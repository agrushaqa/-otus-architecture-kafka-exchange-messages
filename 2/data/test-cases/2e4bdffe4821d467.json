{"uid":"2e4bdffe4821d467","name":"test_generate_class_by_interface","fullName":"tests.test_adapter.TestAdapter#test_generate_class_by_interface","historyId":"c0b2e6f64a5b3609e5aa0e72ca4154e6","time":{"start":1674579258919,"stop":1674579258921,"duration":2},"status":"failed","statusMessage":"AssertionError: assert 'from tests.t...).execute()\\n' == 'from tests.t...).execute()\\n'\n  Skipping 303 identical leading characters in diff, use -v to show\n  - Position\",\n  + Position\", \n  ?           +\n  -                                 ).execute()\n  ? -------\n  +                          ).execute()\n    \n        def getVelocity(self):\n  -         return self.ioc.resolve(\"TankOperationsIMovable.getVelocity\",\n  +         return self.ioc.resolve(\"TankOperationsIMovable.getVelocity\", \n  ?                                                                      +\n  -                                 ).execute()\n  ? -------\n  +                          ).execute()\n    \n        def setPosition(self, value):\n            return self.ioc.resolve(\"TankOperationsIMovable.setPosition\", value\n  -                                 ).execute()\n  ? -------\n  +                          ).execute()","statusTrace":"self = <test_adapter.TestAdapter object at 0x7f38f570c9d0>\n\n    def test_generate_class_by_interface(self):\n        current_dir = os.path.dirname(os.path.realpath(__file__))\n        target_path = os.path.join(\n            current_dir,\n            \"test_data\"\n        )\n        generator = GeneratorAdapter()\n        generator.set_filename(\"autogen_target.py\")\n        generator.set_clazz(TankOperationsIMovable)\n        generator.set_target_dir(target_path)\n        generator.execute()\n        expected_file_path = os.path.join(\n            os.path.dirname(os.path.realpath(__file__)),\n            \"test_data\", \"expected_autogen_target.py\"\n        )\n        with open(expected_file_path) as expected_file_handler:\n            expected_content = expected_file_handler.read()\n    \n        with open(os.path.join(ClassInfo.get_dir(TankOperationsIMovable),\n                               \"autogen_target.py\")) as target_file_handler:\n            actual_content = target_file_handler.read()\n>       assert actual_content == expected_content\nE       assert 'from tests.t...).execute()\\n' == 'from tests.t...).execute()\\n'\nE         Skipping 303 identical leading characters in diff, use -v to show\nE         - Position\",\nE         + Position\", \nE         ?           +\nE         -                                 ).execute()\nE         ? -------\nE         +                          ).execute()\nE           \nE               def getVelocity(self):\nE         -         return self.ioc.resolve(\"TankOperationsIMovable.getVelocity\",\nE         +         return self.ioc.resolve(\"TankOperationsIMovable.getVelocity\", \nE         ?                                                                      +\nE         -                                 ).execute()\nE         ? -------\nE         +                          ).execute()\nE           \nE               def setPosition(self, value):\nE                   return self.ioc.resolve(\"TankOperationsIMovable.setPosition\", value\nE         -                                 ).execute()\nE         ? -------\nE         +                          ).execute()\n\ntests/test_adapter.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1674579258854,"stop":1674579258917,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_adapter"},{"name":"subSuite","value":"TestAdapter"},{"name":"host","value":"fv-az246-549"},{"name":"thread","value":"2356-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_adapter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2e4bdffe4821d467.json","parameterValues":[]}